clear;
Dateiname = 'Fehler_FOL_din.xlsx';
%% init variables
%res = 15;    % resolution of plot / number of sampling points
%relativeHumidity = linspace(10, 90, res);
%temperature = linspace(1, 30, res);
relativeHumidity = [49.83708096;58.32987178;44.7310942;44.3530276;59.21588203;46.94111973;39.31139545;47.85244109;54.2632737;33.68381264;57.66618418;78.59149147;98.64676705;110.6319728;119.4517131;96.52254293;92.0235294;96.13651357;82.37981033;60.73985771;77.73225961;78.07915597;60.94147268];
temperature = [16.59949761;13.01296906;20.07740276;16.64689488;16.66960064;16.91140271;16.91452602;16.86232549;16.60162971;27.40726988;-2.673006744;-2.688771172;-2.645172698;-2.356492744;-2.363523294;5.583576956;5.467996806;5.834500156;5.590253356;12.67500864;12.94705726;12.90245463;19.90837626];

ambientPressure = 1013;

% error range - take care that range has to be the full span of error
% e.g. +/-2 results in an error of 4 !
errorRelativeHumidity = 7;
errorAmbientPressure = 50;
errorTemperature = 0.0425; % for PT 100 1/10 DIN class B at 25 °C

linErrorAbs = zeros(2,23);
% errorOverErrorRelativeHumidity = zeros(3,3,3);
linErrorAbs = ones(23,1);

for i = 1 : 23
   
%         if temperature(i) < 0
%             errorTemperature = 7*(-temperature(i)/10)+0.3;
%         elseif temperature(i) >= 0
%             errorTemperature = 10*(temperature(i)/20)+0.3;
%         end
%     
        tempError = humidAir_errorPropagationRHtoX(...
        relativeHumidity(i), errorRelativeHumidity, ...
        temperature(i), errorTemperature, ...
        ambientPressure, errorAmbientPressure);
        
        linErrorAbs(i,1) = tempError;
    
end


basis(:,1) = relativeHumidity(:);
basis(:,2) = temperature(:);

[X,Y]= ndgrid(basis(1,:), basis(2,:));

Z = linErrorAbs(:,:);

%Tabel erzeugen
ExTab = table(Z,basis);
%in Excelfile schreiben
writetable(ExTab,Dateiname,'WriteRowNames',true);

    
%        %  Auto-generated by MATLAB on 27-Nov-2015 08:52:23
% 
%         % Create figure
%         figure1 = figure('PaperSize',[20.98404194812 29.67743169791],...
%             'InvertHardcopy','off',...
%             'Color',[1 1 1]);
%         colormap('hsv');
% 
%         % Create axes
%         axes1 = axes('Parent',figure1,'ZMinorTick','on','ZMinorGrid','on',...
%             'Position',[0.15597667638484 0.0974658869395711 0.628279883381924 0.769980506822612],...
%             'FontSize',12);
%         %% Uncomment the following line to preserve the X-limits of the axes
%         % xlim(axes1,[0 100]);
%         %% Uncomment the following line to preserve the Y-limits of the axes
%         % ylim(axes1,[0 30]);
%         %% Uncomment the following line to preserve the Z-limits of the axes
%         % zlim(axes1,[0 1.4]);
%         view(axes1,[0.0 90]);
%         grid(axes1,'on');
%         hold(axes1,'all');
% 
%         % Create surf
%         surf(X,Y,Z,'Parent',axes1,'FaceColor','flat');
% 
%         % Create xlabel
%         xlabel({'relative humidity in %'},'FontWeight','demi','FontSize',13);
% 
%         % Create ylabel
%         ylabel({'temperature in °C'},'FontWeight','demi','FontSize',13);
% 
%         % Create zlabel
%         zlabel({'dx in g/kg'},'FontWeight','demi','FontSize',13);
% 
%         % Create title
%         varTitle1 = strcat('measurement uncertainty of water load');
%         varTitle2 = strcat('+/-', num2str(errorRelativeHumidity/2) ,' % RH, +/-',num2str(errorTemperature/2) ,' K, +/-',num2str(errorAmbientPressure/2) ,' hPa','  (p =', num2str(ambientPressure) ,'hPa)');
%         title({varTitle1, varTitle2},...,
%             'FontSize',14);
% 
%         % Create colorbar
%         colorbar('peer',axes1,[0.891394557823129 0.11 0.0388726919339164 0.815],...
%             'FontSize',12);